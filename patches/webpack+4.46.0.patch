diff --git a/node_modules/webpack/lib/Compilation.js b/node_modules/webpack/lib/Compilation.js
index 6329174..591c698 100644
--- a/node_modules/webpack/lib/Compilation.js
+++ b/node_modules/webpack/lib/Compilation.js
@@ -1036,13 +1036,13 @@ class Compilation extends Tapable {

 		const errorAndCallback = this.bail
 			? err => {
-					callback(err);
-			  }
+				callback(err);
+			}
 			: err => {
-					err.dependencies = [dependency];
-					this.errors.push(err);
-					callback();
-			  };
+				err.dependencies = [dependency];
+				this.errors.push(err);
+				callback();
+			};

 		if (
 			typeof dependency !== "object" ||
@@ -1314,7 +1314,7 @@ class Compilation extends Tapable {
 		}
 		buildChunkGraph(
 			this,
-			/** @type {Entrypoint[]} */ (this.chunkGroups.slice())
+			/** @type {Entrypoint[]} */(this.chunkGroups.slice())
 		);
 		this.sortModules(this.modules);
 		this.hooks.afterChunks.call(this.chunks);
@@ -2158,7 +2158,7 @@ class Compilation extends Tapable {
 						} else {
 							throw new Error(
 								`Conflict: Multiple chunks emit assets to the same filename ${file}` +
-									` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`
+								` (chunks ${alreadyWritten.chunk.id} and ${chunk.id})`
 							);
 						}
 					}
@@ -2198,6 +2198,7 @@ class Compilation extends Tapable {
 					});
 				}
 			} catch (err) {
+
 				this.errors.push(
 					new ChunkRenderError(chunk, file || filenameTemplate, err)
 				);
@@ -2288,7 +2289,7 @@ Compilation.prototype.applyPlugins = util.deprecate(
 	 * @returns {void}
 	 * @this {Compilation}
 	 */
-	function(name, ...args) {
+	function (name, ...args) {
 		this.hooks[
 			name.replace(/[- ]([a-z])/g, match => match[1].toUpperCase())
 		].call(...args);
@@ -2305,7 +2306,7 @@ Object.defineProperty(Compilation.prototype, "moduleTemplate", {
 		 * @this {Compilation}
 		 * @returns {TODO} module template
 		 */
-		function() {
+		function () {
 			return this.moduleTemplates.javascript;
 		},
 		"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead"
@@ -2317,7 +2318,7 @@ Object.defineProperty(Compilation.prototype, "moduleTemplate", {
 		 * @this {Compilation}
 		 * @returns {void}
 		 */
-		function(value) {
+		function (value) {
 			this.moduleTemplates.javascript = value;
 		},
 		"Compilation.moduleTemplate: Use Compilation.moduleTemplates.javascript instead."
diff --git a/node_modules/webpack/lib/ModuleFilenameHelpers.js b/node_modules/webpack/lib/ModuleFilenameHelpers.js
index bd0742b..de1d5d8 100644
--- a/node_modules/webpack/lib/ModuleFilenameHelpers.js
+++ b/node_modules/webpack/lib/ModuleFilenameHelpers.js
@@ -42,7 +42,7 @@ const getBefore = (str, token) => {
 };

 const getHash = str => {
-	const hash = createHash("md4");
+	const hash = createHash("sha256");
 	hash.update(str);
 	const digest = /** @type {string} */ (hash.digest("hex"));
 	return digest.substr(0, 4);
@@ -64,8 +64,8 @@ ModuleFilenameHelpers.createFilename = (module, options, requestShortener) => {
 		typeof options === "object"
 			? options
 			: {
-					moduleFilenameTemplate: options
-			  }
+				moduleFilenameTemplate: options
+			}
 	);

 	let absoluteResourcePath;
diff --git a/node_modules/webpack/lib/NamedModulesPlugin.js b/node_modules/webpack/lib/NamedModulesPlugin.js
index 2d84aaf..fe35290 100644
--- a/node_modules/webpack/lib/NamedModulesPlugin.js
+++ b/node_modules/webpack/lib/NamedModulesPlugin.js
@@ -8,7 +8,7 @@ const createHash = require("./util/createHash");
 const RequestShortener = require("./RequestShortener");

 const getHash = str => {
-	const hash = createHash("md4");
+	const hash = createHash("sha256");
 	hash.update(str);
 	const digest = /** @type {string} */ (hash.digest("hex"));
 	return digest.substr(0, 4);
diff --git a/node_modules/webpack/lib/SourceMapDevToolPlugin.js b/node_modules/webpack/lib/SourceMapDevToolPlugin.js
index 3018eb2..cc5d891 100644
--- a/node_modules/webpack/lib/SourceMapDevToolPlugin.js
+++ b/node_modules/webpack/lib/SourceMapDevToolPlugin.js
@@ -167,7 +167,7 @@ class SourceMapDevToolPlugin {
 					const reportProgress =
 						context && context.reportProgress
 							? context.reportProgress
-							: () => {};
+							: () => { };

 					const files = [];
 					for (const chunk of chunks) {
@@ -346,7 +346,7 @@ class SourceMapDevToolPlugin {
 									: filename,
 								query,
 								basename: basename(filename),
-								contentHash: createHash("md4")
+								contentHash: createHash("sha256")
 									.update(sourceMapString)
 									.digest("hex")
 							};
@@ -357,8 +357,8 @@ class SourceMapDevToolPlugin {
 							const sourceMapUrl = options.publicPath
 								? options.publicPath + sourceMapFile.replace(/\\/g, "/")
 								: path
-										.relative(path.dirname(file), sourceMapFile)
-										.replace(/\\/g, "/");
+									.relative(path.dirname(file), sourceMapFile)
+									.replace(/\\/g, "/");
 							/**
 							 * Add source map url to compilation asset, if {@link currentSourceMappingURLComment} presented
 							 */
diff --git a/node_modules/webpack/lib/optimize/ConcatenatedModule.js b/node_modules/webpack/lib/optimize/ConcatenatedModule.js
index df4d216..70008b6 100644
--- a/node_modules/webpack/lib/optimize/ConcatenatedModule.js
+++ b/node_modules/webpack/lib/optimize/ConcatenatedModule.js
@@ -173,8 +173,7 @@ const getFinalName = (
 						`Circular reexports ${Array.from(
 							alreadyVisited,
 							e =>
-								`"${e.module.readableIdentifier(requestShortener)}".${
-									e.exportName
+								`"${e.module.readableIdentifier(requestShortener)}".${e.exportName
 								}`
 						).join(
 							" --> "
@@ -560,7 +559,7 @@ class ConcatenatedModule extends Module {
 				orderedConcatenationListIdentifiers += " ";
 			}
 		}
-		const hash = createHash("md4");
+		const hash = createHash("sha256");
 		hash.update(orderedConcatenationListIdentifiers);
 		return this.rootModule.identifier() + " " + hash.digest("hex");
 	}
@@ -1384,9 +1383,8 @@ class HarmonyImportSpecifierDependencyConcatenatedTemplate {
 		if (dep._id === null) {
 			content = `__WEBPACK_MODULE_REFERENCE__${info.index}_ns${strictFlag}__`;
 		} else if (dep.namespaceObjectAsContext) {
-			content = `__WEBPACK_MODULE_REFERENCE__${
-				info.index
-			}_ns${strictFlag}__[${JSON.stringify(dep._id)}]`;
+			content = `__WEBPACK_MODULE_REFERENCE__${info.index
+				}_ns${strictFlag}__[${JSON.stringify(dep._id)}]`;
 		} else {
 			const exportData = Buffer.from(dep._id, "utf-8").toString("hex");
 			content = `__WEBPACK_MODULE_REFERENCE__${info.index}_${exportData}${callFlag}${strictFlag}__`;
@@ -1471,7 +1469,7 @@ class HarmonyExportExpressionDependencyConcatenatedTemplate {
 }

 class NullTemplate {
-	apply() {}
+	apply() { }
 }

 module.exports = ConcatenatedModule;
